"""This program was made by Gregory van den Ende"""
from bs4 import BeautifulSoup
import requests
from PIL import Image
from io import BytesIO

ascii_list = {32: ' ', 33: '!', 34: '"', 35: '#', 36: '$', 37: '%', 38: '&',
              39: "'", 40: '(', 41: ')', 42: '*', 43: '+', 44: ',', 45: '-',
              46: '.', 47: '/ ', 48: '0', 49: '1', 50: '2', 51: '3', 52: '4',
              53: '5', 54: '6', 55: '7', 56: '8', 57: '9', 58: ':', 59: ';',
              60: '<', 61: '=', 62: '>', 63: '?', 64: '@', 65: 'A', 66: 'B',
              67: 'C', 68: 'D', 69: 'E', 70: 'F', 71: 'G', 72: 'H', 73: 'I',
              74: 'J', 75: 'K', 76: 'L', 77: 'M', 78: 'N', 79: 'O', 80: 'P',
              81: 'Q', 82: 'R', 83: 'S', 84: 'T', 85: 'U', 86: 'V', 87: 'W',
              88: 'X', 89: 'Y', 90: 'Z', 91: '[', 92: "\\", 93: ']', 94: '^',
              95: '_', 96: '`', 97: 'a', 98: 'b', 99: 'c', 100: 'd', 101: 'e',
              102: 'f', 103: 'g', 104: 'h', 105: 'i', 106: 'j', 107: 'k', 108: 'l',
              109: 'm', 110: 'n', 111: 'o', 112: 'p', 113: 'q', 114: 'r', 115: 's', 116: 't',
              117: 'u', 118: 'v', 119: 'w', 120: 'x', 121: 'y', 122: 'z', 123: '{',
              124: '|', 125: '}', 126: '~', 129: 'ü', 130: 'é', 131: 'â', 132: 'ä',
              133: 'à', 136: 'ê', 137: 'ë', 138: 'è', 139: 'ï', 140: 'î', 141: 'ì', 142: 'Ä',
              144: 'É', 147: 'ô', 148: 'ö', 149: 'ò', 150: 'û', 151: 'ù', 152: 'ÿ', 153: 'Ö',
              154: 'Ü', 160: 'á', 161: 'í', 162: 'ó', 163: 'ú', 164: 'ñ', 165: 'Ñ'}

morse_list = {'/': ' ', '.-': 'A', '-...': 'B', '-.-.': 'C', '-..': 'D', '.': 'E',
              '..-.': 'F', '--.': 'G', '....': 'H', '..': 'I', '.---': 'J', '-.-': 'K',
              '.-..': 'L', '--': 'M', '-.': 'N', '---': 'O', '.--.': 'P', '--.-': 'Q',
              '.-.': 'R', '...': 'S', '-': 'T', '..-': 'U', '...-': 'V', '.--': 'W',
              '-..-': 'X', '-.--': 'Y', '--..': 'Z', '-----': '0', '.----': '1',
              "..---": '2', "...--": '3', '....-': '4', '.....': '5', '-....': '6',
              '--...': '7', '---..': '8', '----.': '9', "..--": 'Ü', '----': 'Ch',
              '---.': 'Ö', '.-.-': 'Ä', '.-.-.-': '.', '--..--': ',', '..--..': '?',
              '..--.': '!', '---...': ':', '.-..-.': '"', '.----.': "'", '-...-': '=',
              '.---.': 'Ĵ'}


def master():  # uses other functions to run the program
    s = requests.Session()
    login(s)
    solution = import_image_returns_password(s, get_image_url(s))
    print(solution)
    post_solution(s, solution)


def login(session):  # login to hackmysite
    username = "usernamegoeshere"
    password = "passwordgoeshere"

    with session as C:
        url = "https://www.hackthissite.org/user/login"
        C.get(url)
        login_data = dict(username=username, password=password)
        C.post(url, data=login_data, headers={"Referer": "https://www.hackthissite.org"})


def get_image_url(session):
    assignmentpage = session.get("https://www.hackthissite.org/missions/prog/2/")
    soup = BeautifulSoup(assignmentpage.content, "html.parser")
    soup_image = soup.find('img', alt="Image")['src']
    return "https://www.hackthissite.org"+str(soup_image)


def import_image_returns_password(session, url):
    response = session.get(url)
    img = Image.open(BytesIO(response.content), "r")
    pix_val = list(img.getdata())
    pixelcounter = -1
    array_of_numbers = []
    array_of_morse = []
    for pixel in pix_val:
        if pixel == 0:
            pixelcounter += 1
        if pixel == 1:
            pixelcounter += 1
            array_of_numbers.append(pixelcounter)
            pixelcounter = 0
    for number in array_of_numbers:
        array_of_morse.append(ascii_list[number])

    string1 = "".join(array_of_morse)
    words = string1.split()
    array_of_letters_of_password = []

    for word in words:
        array_of_letters_of_password.append(morse_list[word])

    decoded_password = ''.join(array_of_letters_of_password)
    morse_code = ''.join(array_of_morse)
    print(morse_code)
    return decoded_password.lower()


def post_solution(session, solution):
    with session as C:
        url = "https://www.hackthissite.org/missions/prog/2/index.php"
        answer_data = dict(solution=solution)
        posted_answer = C.post(url, data=answer_data,
                               headers={"Referer": "https://www.hackthissite.org/prog/2/index.php"})
        soup = posted_answer.text
        print(soup)
master()
